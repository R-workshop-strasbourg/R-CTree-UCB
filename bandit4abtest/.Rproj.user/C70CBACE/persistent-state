build-last-errors="[]"
build-last-errors-base-dir="~/Documents/manue/Manipulation/datascience-emmanuelle/programme_R/mypackage/bandit4abtest/"
build-last-outputs="[{\"output\":\"==> devtools::document(roclets=c('rd', 'collate', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"Updating bandit4abtest documentation\\n\",\"type\":2},{\"output\":\"Writing NAMESPACE\\n\",\"type\":1},{\"output\":\"Loading bandit4abtest\\n\",\"type\":2},{\"output\":\"Warning: data.R:30: @example spans multiple lines. Do you want @examples?\\nWarning: data.R:61: @example spans multiple lines. Do you want @examples?\\n\",\"type\":2},{\"output\":\"Writing UCB.Rd\\nWriting NAMESPACE\\n\",\"type\":1},{\"output\":\"Documentation completed\\n\\n\",\"type\":1},{\"output\":\"==> R CMD INSTALL --preclean --no-multiarch --with-keep.source bandit4abtest\\n\\n\",\"type\":0},{\"output\":\"* installing to library ‘/home/manue/R/x86_64-pc-linux-gnu-library/3.4’\\n\",\"type\":1},{\"output\":\"* installing *source* package ‘bandit4abtest’ ...\\n\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** data\\n\",\"type\":1},{\"output\":\"*** moving datasets to lazyload DB\\n\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\n\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"Warning: /home/manue/Documents/manue/Manipulation/datascience-emmanuelle/programme_R/mypackage/bandit4abtest/man/UCB.Rd:32: unknown macro '\\\\alpha'\\n\",\"type\":2},{\"output\":\"Warning: /home/manue/Documents/manue/Manipulation/datascience-emmanuelle/programme_R/mypackage/bandit4abtest/man/data_control_K.Rd:20: unknown macro '\\\\geq'\\n\",\"type\":2},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (bandit4abtest)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
