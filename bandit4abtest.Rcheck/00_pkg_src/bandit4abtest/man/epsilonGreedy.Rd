% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epsilonGreedy.R
\name{epsilonGreedy}
\alias{epsilonGreedy}
\title{epsilonGreedy algorithm}
\usage{
epsilonGreedy(visitorReward, K = ncol(visitorReward), epsilon = 0.25)
}
\arguments{
\item{visitorReward}{Dataframe of integer or numeric values}

\item{K}{Integer value (optional)}

\item{epsilon}{Numeric value (optional)}
}
\value{
\itemize{ List of element:
 \item S:numerical matrix of results ,
 \item choice: choices of epsilonGreedy,
 \item time: time of cumputation,
 \item theta_hat: mean estimated of each arm
 \item theta: real mean of each arm
 }
}
\description{
Control data in visitorReward with \code{\link{bandit_reward_control}}
Stop if something is wrong.
Generate a matrix to save the results (S).
At each iteration play the best arm with a probability of 1-epsilon and
other arm with probability epsilon
Returns the calculation time.
Return the estimated and actual averages and number of choices for each arm.
See also \code{\link{condition_epsilonGreedy}}, \code{\link{generate_Matrix_SK}},
and \code{\link{play_arm}}.
Require \code{\link{tic}} and \code{\link{toc}} from \code{\link{tictoc}} library
}
\examples{
## Generates 10000 numbers from 2 binomial  distributions
set.seed(4434)
K1 <- rbinom(1000, 1, 0.6)
K2 <- rbinom(1000, 1, 0.7)
## Define a dataframe of rewards
visitorReward <- as.data.frame(cbind(K1,K2) )
#Run epsilon Greedy algorithm
epsilonGreedy_alloc  <- epsilonGreedy(visitorReward,epsilon  = 0.25)
epsilonGreedy_alloc$S
barplot(table(epsilonGreedy_alloc$choice),main = "Histogram of choices",xlab="arm")
epsilonGreedy_alloc$time
epsilonGreedy_alloc$theta_hat
epsilonGreedy_alloc$theta
}
