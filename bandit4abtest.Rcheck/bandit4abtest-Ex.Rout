
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "bandit4abtest"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('bandit4abtest')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("LINUCB")
> ### * LINUCB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: LINUCB
> ### Title: LINUCB algorithm
> ### Aliases: LINUCB
> 
> ### ** Examples
> 
> size.tot = 1000
> set.seed(4649)                          # this makes the example exactly reproducible
> x1 = runif(size.tot, min=0, max=10)          # you have 4, largely uncorrelated predictors
> x2 = runif(size.tot, min=0, max=10)
> x3 = runif(size.tot, min=0, max=10)
> x4 = runif(size.tot, min=0, max=10)
> dt = cbind(x1,x2,x3,x4)
> #arm reward
> arm_1 <-  as.vector(c(-1,9,-8,4))
> K1 = crossprod(t(dt),arm_1)
> arm_2 <-  as.vector(c(-1,2,1,0))
> K2 = crossprod(t(dt),arm_2)
> arm_3 <-  as.vector(c(-1,-5,1,10))
> K3 = crossprod(t(dt),arm_3)
> visitorReward <-  data.frame(K1,K2,K3)
> dt <- as.data.frame(dt)
> LINUCB(dt,visitorReward)
0.109 sec elapsed
$proba
   [1]  10.4068992  24.5882212   9.9472540  20.3436172  21.2127281  65.7077553
   [7]  39.1643633  24.1619573  51.1192202  22.4267712  51.0045433  67.6548441
  [13]  14.0513929   6.9288077  55.6488436  74.1674587  54.0410239  19.0212328
  [19]  62.5531571  13.1840559  60.1919415  15.2590465  21.8164127  44.7144822
  [25]  24.2914235  48.8141976  24.5488236  46.2736754  55.2705179 103.4681124
  [31]  56.3510470  60.4607210  29.6837962  14.6627739  10.7456314  84.6786562
  [37]  29.4527491  61.9677860 104.5206207  49.7164357  14.7745171  93.7117052
  [43]  76.4703456  77.3061504  72.0593341   7.1112097  20.6310831  82.1227141
  [49]  10.8400168  25.1457812  -1.3391794  48.6928824  39.8658999  66.0818523
  [55]  55.9413297  54.7352724  24.2420274  82.4501400  44.3337243  42.9110402
  [61]  33.3991305  39.6996668  73.7267444  51.9877914  32.0502381  64.1477396
  [67]   4.4721534  26.2553989  86.5400261  26.9440205  27.6298610  28.9273223
  [73]  32.7496224  77.1058486   9.6527689  42.5987547  22.5237999  64.4329788
  [79]  35.3494547  47.2458790  38.8695789  60.5165150  11.1478884  51.1139208
  [85]  32.2432449  65.3522366  46.9639311  64.3425744  28.4313003  62.3740626
  [91]  58.1865448  43.5716399  23.6640768  41.7127544  51.0522310  28.7564473
  [97]  49.4554566  14.2443437  82.3352009  46.5446138  45.5550055  67.7971227
 [103]  61.6621984  41.2758248  29.7378833  50.8839362  46.9321190  34.3627999
 [109]  47.2413182  -1.3290168  15.4065408  65.4496221  63.2115084  32.5533096
 [115]  25.3479629   7.3186191  19.9865085  38.7136279  59.9761967  49.9307785
 [121]  36.3384396  64.3541187  74.0500240  56.4647448  74.9615746  50.0303833
 [127]  13.0661899  53.9626209  40.5608377  37.0302304  65.1998213  49.1707966
 [133]  16.6190737   8.2062564  14.8359958  87.6412315  32.8888846   7.7035456
 [139]  32.3487873  61.4067576  69.8252810  46.9806990  73.4474596  50.0372784
 [145]  78.4563387  41.3296940  40.6054926  75.4432939  23.5483493  89.3052895
 [151]  62.1127757   9.9193185  38.6806408  97.5212999  62.5175031  76.3545959
 [157]  20.4744164  95.0330707  15.6652650  89.0933792  68.5559513  23.0728103
 [163]  49.3202657   1.3430925  69.9846189  28.8093709  58.8930528  43.7151014
 [169]  21.3227735  16.9012612   8.0018865  93.9838405  39.5330164  30.6495232
 [175]  88.2691774  81.1974770  21.3990658  74.4286853  26.2742951  53.4512821
 [181]  50.5330494  24.8776849  19.1706563  55.6139894  13.8401437  24.5510696
 [187]  35.0228582  27.9360813   2.4711855  26.9733783   9.2297780  47.1196479
 [193]  36.2767247  62.7316059  55.7020579  68.3464643  37.5955102  37.6590582
 [199]  12.4574654   5.9468944  21.1265291   7.4614540  43.5324874  39.6578678
 [205]  74.7998748  44.4238538  56.0311252  52.1988731  11.0758008  13.0915506
 [211]  48.0525099  81.2100282  39.4336902  46.4062966  38.1652277  16.6519167
 [217]  85.4905064  32.6866673  29.5930651  14.3283943  18.5646112  30.7043600
 [223]  26.7402698  16.8977766  30.8330610  66.0445568  39.8425502  15.2885329
 [229]  66.1638410  46.1648683  85.4167346  55.9291436  49.0303664  24.8139788
 [235]  83.9073863   5.5912440  -0.7667380  49.1089744  71.9214239  12.9629451
 [241]  89.0735908  42.5475947  29.5498002  17.5521381  42.6587955  29.3774730
 [247]  19.2155591  40.8147379  13.2708252  77.3780181  49.1381641  87.0343952
 [253]  50.2892879  25.4426354  42.9159083  72.9768561  83.9358494  66.8477197
 [259]  58.4882871  74.3124293  13.4130423  30.3008527  70.8320624  57.6095255
 [265]  64.3088006  27.0226908  48.4905855  83.8036540  65.6220519  55.4853963
 [271]  71.4486789  35.4160056   2.9356627  26.2494670  10.5505895   3.2131598
 [277]  10.9417557  37.5386304  81.4518494  66.4417313 102.6335059  47.3904000
 [283]  60.0364738   9.9460835  39.2432930  34.0359257  49.6367906  41.6651513
 [289]   8.9026012  10.8186922  59.7091827  49.6525897  17.5726465  45.9768924
 [295]  35.5645658  17.2093586  35.2008707  78.8558900  17.4963614  15.9681797
 [301]  18.9654376  58.4686071  72.0161456  51.5614532  25.6348588  45.4774560
 [307]  56.2349129  34.6988495  30.1313045  16.9877761  48.5515215  57.6866272
 [313]  35.1224308  82.8537301  43.0352372  24.1578702  29.4325216  11.3067920
 [319]   9.8820502  70.3132217   2.2822425  39.3166050  26.1780053  18.3287637
 [325]  42.8635696  12.2907079  40.3001579  48.8104092  14.7393776  40.9576714
 [331]  96.1846949  73.4120766  73.8313826  42.1501258  38.1885511  75.9766574
 [337]  37.5934253  17.1683505  63.0435517  96.3599868  17.0457293  54.9336568
 [343]  45.0611617  65.1543647  51.0559504 101.8145488  38.4978081  71.2391479
 [349]  18.3796728  25.1314383  32.4250206  25.9426559  75.8828225  88.4714050
 [355]  26.9003098  24.6602979  48.6411137  44.3949759  30.5006049  33.7323901
 [361]   9.7035411  78.5233096  90.0866228  50.3680134  21.8931870  38.3541394
 [367]  77.5820434  18.8835616  58.2351934  61.5446443  68.1777747  69.6409958
 [373]  62.7974265  80.3455677  63.1339224  69.4268765  42.8641928  83.2353067
 [379]  46.9110406  48.9693279  83.3085093  26.1503418  54.7679715  69.0953793
 [385]  22.5528714  38.9789848  99.0042980  61.7858213  99.9106558   5.5887898
 [391]   8.5807359  80.5849187  10.5963252   5.5982070  17.9707665  35.1851901
 [397]  18.1017329  53.0187357  90.1013721  88.1885949  36.8551179  61.6914309
 [403]  76.4100770  53.8401013  31.3800724  74.9900007  62.9483357  37.0793235
 [409]  60.0554092  46.9942947  42.1643357  86.7916436  49.0853048  18.4192879
 [415]  61.5360582  28.2467632  67.9383068  14.5743729  47.2438472   6.1790070
 [421]  22.6546548  36.8704332  45.7763213   3.8431428   1.8728340  39.4228082
 [427]  41.1405616  83.1051795  26.3517825  69.2754019  40.7492455  61.6641575
 [433]  63.3643028  57.0722367  52.0135252  33.0888945  44.8611891   0.8222973
 [439]  57.7799962  12.6316388  32.9668619  72.9270856  59.3316979   7.0338368
 [445]  11.7374375  81.7596530  45.7985706  86.6790716  69.0899474  70.9742835
 [451]  27.5973718   2.5414553  14.9949746  19.8762839  45.4729301  35.5864503
 [457]  49.5297276  33.7509314  36.9544935  54.1606552  72.9895920  86.6723013
 [463]  10.3627638  63.2884855  39.7057080  78.8420315  58.0873691  25.0142645
 [469]  46.4193890  10.0030705  39.9780764  27.1523669   2.4023035  50.9932080
 [475]  24.9592707  66.6540167  45.8072431  44.5936405  89.1258964  75.7962767
 [481]  41.5391622  57.5276824  31.6765434  29.3229273  19.4100172  71.7488566
 [487]  54.4950657  52.9037182  24.3534198  48.1663672  40.5193300  76.7856929
 [493]  46.2611397  27.6845070  48.6117788  37.7620771  43.6583298  47.4022932
 [499]  56.3230092  22.2082734  87.3443271  13.4362597  43.9078232  34.9783968
 [505]  27.6827878  95.5789378  60.9050198  14.8701924  19.7234923  30.4265136
 [511]  46.0008702  54.6802087   6.3415129  85.6729814  46.4538681  35.2022715
 [517]  17.2088477  23.9127981  25.2478196  64.3543164  32.1939568  51.6906327
 [523]  73.9634445  19.3182403  66.2761971  44.9370305  77.5545167  51.5343918
 [529]  32.1873512  54.7282421  41.3753710   8.3966533  17.6724355  44.4773255
 [535]  60.3938455  33.8503177  45.2716753  70.3234040  53.4123276  22.5834388
 [541]  43.8930963  71.5658618  53.9836176  20.2142264  49.2267114  45.8926980
 [547]  38.4057217  70.2831410  56.9257904  33.9689546  33.8718297  58.8628374
 [553]  20.4733877  57.6490886  60.7335380  17.4653150  18.7244487   4.7876211
 [559]  90.3079328  17.1136483  13.1588257  10.6387660  35.7245588  45.1294554
 [565]   9.9100702  37.5377661  28.6644491  34.5217631  22.7701925   9.9100180
 [571]  78.5470330  23.1738578  52.2747057  64.3073252  43.9835480   2.2528558
 [577]  61.6786227  41.5683941  15.4314393  33.9403123  99.8614331  53.7157553
 [583]  38.5649320  49.9659478  61.7562408  66.6741006  42.3845895  72.6623213
 [589]  51.6320487  47.8079581  88.2702124  32.2804434  38.8842812  15.1663237
 [595]  74.8537178  49.5831489  63.1126160  38.2639545 101.7928768   2.2726571
 [601]  42.9391125   6.1510373  22.6169252  46.2786019  58.4085891  50.7282782
 [607]  61.8558792  28.7032601  71.6443692  12.5035289  11.8729139  63.8981847
 [613]  71.1299997  32.8785918  42.7424652  75.3177454  54.5547448  55.3899517
 [619]  66.3716292  71.1886663  52.6342694  52.7175382  27.8144518  41.6490615
 [625]  20.6966231  79.1955037  48.5723133  54.4074693  54.1834869  34.4033627
 [631]  40.3057292  51.7975530  17.5288144  66.5114793  31.2711187  15.2015908
 [637]  71.4402846  75.8773778  31.9183084   4.8095180  78.7508266  26.3514247
 [643]  74.8256098   2.1306501  31.5080068  48.4992782  46.8273592  71.5438822
 [649]  61.9838822  22.4104806  21.9851004  61.2739558  29.2686119  87.2603181
 [655]  41.1664288  44.9489258   2.3096646   4.4254901  25.7155499  56.7798765
 [661]  44.7582890   9.7167248  54.2450058  52.9656427  48.4536522  34.8592713
 [667]  74.8554817   6.4294032  22.5655666  51.2832861  54.7618081  17.7042774
 [673]  21.0874660  52.2028179  19.8072383  83.1922027  25.0774384   0.4911157
 [679]  75.3961821  76.1002886  82.0266936  44.3028712  19.0721922  63.5124110
 [685]  47.3799313  50.1856929  71.6375508  59.5634618  92.2981596  87.6516518
 [691]  40.1544907  36.6220520  53.8977286  10.0640502  25.7686143  11.6934006
 [697]  55.5231685  58.0885456  93.8860376  53.1345880  12.6545464  38.1665520
 [703]  97.7007154  55.6594245  22.7235047  53.2523369  57.8584625  28.5944999
 [709]  41.5822577  43.1066152  12.0864400  48.4300062   1.3959480  21.8144596
 [715]  47.0125729  16.2392498  25.2010923  29.3822390 102.2916946  42.6065733
 [721]  45.7091493  25.9709716  64.6025679  58.4943058  84.3883592  37.9075046
 [727]  22.6082664   7.7466321  62.6940737  64.5033911  16.1104786  56.4580564
 [733]  29.9163704   4.1364059  53.4036872  63.8830907  82.0169464  76.7087278
 [739]  54.8255135  20.8992723  75.4385413  48.4044893  11.0543019  15.1945112
 [745]  44.5052285  28.2041890  49.5222966   3.3817259  43.6748277  73.8373640
 [751]  46.1056796  58.4210238  15.8654096   5.8521376  51.3087953  63.6702065
 [757]  73.3424714  90.0934031  31.1414190  30.9635434  50.1953038  12.3354816
 [763]  19.5642824  90.1776402  14.7774195  30.1394857  22.9352379  56.0396932
 [769]  45.2728520  55.8045235  41.8217534  52.1009033  17.0647670  49.0876587
 [775]  76.4307871  40.2174309  86.5243558  69.2026416  71.8258125  18.5459514
 [781]  64.3141555  70.1963220  27.9787897  54.0308520 114.3696590  14.8871381
 [787]  60.3420299  70.4520813  57.2001454  56.3646353  46.8637769  20.4747602
 [793]  36.5675873  18.3781959  83.4938528  90.5639027  44.5528415  34.5293551
 [799] 102.0121526  15.4493003  55.6922102  19.1894538  84.7011236  52.4522308
 [805]  58.6769786   8.5201734  16.9278479  87.2871409  88.2821894  19.3273252
 [811]  45.4355385   4.7623173  50.1239792  33.7600856  78.4709640  23.5530537
 [817]  51.3426517  17.7955174  61.1381175  75.4974423  26.1708404   9.5209650
 [823]  70.5449437  87.1912099  99.5237682   8.1987912  77.4225287   9.6788665
 [829]  94.3596755  56.5901138  70.9459251  14.6173545  77.3541813  13.1982514
 [835]  11.2677975  32.6914403  26.7155468  49.6185509  78.0827232  39.4481898
 [841]  12.0460592  60.0474464  72.4741953  69.2484244  55.1212705  72.7865225
 [847]  76.1959797  34.0404207  50.8184566  85.6838326 102.7890035 100.7119860
 [853]  56.2103879  72.6532435  26.4654466  71.5389176  48.6644757  26.1331051
 [859]  50.5647381  45.9687567  21.9682341  71.6190292  21.6982601  46.2145102
 [865]  35.5698758  19.0101773  88.7626315   8.0231116  60.7417482  60.7486431
 [871]  34.9576918  50.3435358  66.8606904  22.0006503  67.1014861  65.8277379
 [877]  43.4384823  38.1508039  11.2690386  86.4274076  97.5373062  33.6441517
 [883]  71.5833372  64.6246821  39.4422428  -0.5835886   5.8796983  44.2806594
 [889]  -2.0768388  38.5791243  63.8873055   0.5532714  67.8415427  58.9895413
 [895]  34.4563130  25.2008757  12.7075666  38.1586327  22.1647083  20.0746131
 [901]  96.3504013  65.9478485  33.8465381  68.3655891  15.8969829  89.4094123
 [907]  15.4026267  51.8177979  47.9534610  19.2179103  50.8891043   2.2508595
 [913]  18.4861747  30.4182039  49.9503731  15.0837434  32.8225811  52.0179604
 [919]  86.7917465  70.7717949  27.3585216  41.7981018  41.8579016  49.4096981
 [925]  10.2842817  27.9081252  67.8502996  61.1719287  18.2900439  51.2579376
 [931]  30.2168570  38.3890541  19.6291051  52.0794329  12.5091625  72.7286272
 [937]  27.5099548  15.6065098  90.7872874  53.2266172  61.3638984  64.9797947
 [943]  16.5498410   9.1926576   5.6923558  18.7681630  89.6095000  66.7677167
 [949]  19.3877093  30.7350921  40.4752287  65.1661644  22.9428511  39.4775633
 [955]  51.2515050   7.5981105  65.0187009  29.6464137  18.7149546   4.2812864
 [961]  26.0551776  57.4527448  20.3936061  12.0501706  17.9218448  24.5144325
 [967]  37.7984699 100.8414231  70.6855586  31.5170095  19.6147843  64.1890966
 [973]  79.6098203  16.4680272  54.2461681  27.7632507  45.9827309  16.6918368
 [979]  30.9454525  13.3383395  23.3591105  15.8455480  67.5798060  11.0529494
 [985]  70.7255685  34.0694806  39.1455751  25.5202834  96.4906279  17.8329833
 [991]  65.6398056  52.1934406  -4.4312605  18.2496608  55.5453561  85.8689969
 [997]   4.6850751  51.6187773  35.9392989  29.9638237

$theta_hat
           x1        x2         x3          x4
K1 -0.9982946  8.994785 -7.9925687 4.000274686
K2 -0.9990374  1.997093  1.0007918 0.002171875
K3 -0.9986160 -4.995317  0.9996817 9.996574301

$theta
   x1 x2 x3           x4
K1 -1  9 -8 4.000000e+00
K2 -1  2  1 1.739649e-16
K3 -1 -5  1 1.000000e+01

$choice
   [1] 1 1 2 1 1 1 1 2 1 1 1 1 1 3 3 3 3 1 3 2 3 2 1 3 2 3 3 3 1 1 1 1 1 2 1 1 3
  [38] 1 3 3 2 1 3 1 1 2 1 3 2 2 2 1 3 1 1 1 2 3 3 1 1 1 3 1 1 3 2 3 3 1 1 1 1 1
  [75] 3 1 1 1 1 1 1 3 3 3 3 3 1 1 1 3 3 3 3 3 3 1 3 2 3 3 1 3 3 1 1 3 1 1 1 1 1
 [112] 3 3 1 2 2 2 3 1 3 3 1 1 3 1 1 3 3 1 1 3 1 2 3 3 1 1 1 3 3 3 3 1 3 1 1 3 1
 [149] 1 3 1 2 1 1 3 1 3 1 2 1 1 3 1 2 1 3 1 1 3 3 2 3 1 3 1 1 3 3 1 1 3 2 2 1 3
 [186] 1 1 1 2 3 1 1 3 3 3 3 3 1 3 2 2 1 3 1 3 3 1 1 3 3 1 1 3 1 3 3 1 3 3 2 1 3
 [223] 1 2 3 1 3 2 1 1 3 3 1 3 1 2 2 1 1 2 3 1 1 2 1 1 2 3 2 3 1 1 1 3 3 1 3 1 1
 [260] 1 2 3 3 1 3 3 3 1 1 1 3 3 3 3 2 2 2 3 3 3 1 3 3 2 3 3 1 3 2 2 3 3 3 3 1 1
 [297] 3 1 2 2 2 1 1 1 1 1 3 3 1 2 1 3 3 1 3 3 3 1 2 1 2 1 3 1 3 2 3 3 1 1 1 1 3
 [334] 3 3 1 3 2 1 1 1 3 1 1 1 1 3 3 1 2 3 1 3 3 1 1 3 3 3 1 2 3 1 3 2 1 3 2 3 1
 [371] 1 1 3 3 1 1 1 1 1 1 1 1 1 1 2 3 3 1 1 2 1 3 2 3 1 3 1 3 1 3 1 1 1 3 3 3 3
 [408] 3 3 1 1 1 1 2 3 1 1 1 3 2 1 3 3 2 2 1 1 3 3 3 1 3 3 1 1 1 1 2 3 3 3 1 1 1
 [445] 2 3 1 3 3 3 3 3 3 1 1 1 1 1 3 1 1 3 3 1 1 1 3 3 1 2 3 1 2 3 1 3 3 1 3 1 3
 [482] 1 3 1 1 3 3 1 2 3 1 1 3 1 1 1 3 1 1 1 3 2 3 3 1 1 1 3 1 3 1 3 3 3 3 3 3 1
 [519] 1 1 3 3 3 3 1 3 1 3 3 1 3 2 3 3 1 3 3 3 1 1 3 3 3 3 3 1 3 3 1 1 3 1 2 1 3
 [556] 2 3 3 3 1 3 3 1 1 2 1 1 1 2 2 1 1 1 3 3 2 1 3 3 1 1 3 1 1 3 1 3 1 1 3 3 1
 [593] 3 2 3 1 3 1 3 3 3 1 3 3 3 3 1 3 3 1 2 1 3 3 3 1 1 1 3 3 1 1 1 3 2 1 1 1 3
 [630] 1 3 3 3 1 3 3 1 1 1 3 3 1 1 3 3 3 1 3 3 1 3 3 1 3 3 1 2 2 3 3 3 3 3 1 1 1
 [667] 3 2 1 1 3 2 2 3 1 3 3 3 3 3 3 3 2 3 3 3 3 1 1 3 1 1 3 2 1 2 1 3 1 3 2 1 3
 [704] 3 2 3 1 3 3 1 3 1 2 2 3 2 1 1 1 3 3 1 3 1 3 3 2 2 3 3 2 3 3 2 3 1 3 1 3 3
 [741] 1 1 1 3 3 3 3 3 1 3 3 1 1 2 3 3 1 1 3 1 1 1 3 3 2 1 3 3 3 3 3 3 1 3 3 3 1
 [778] 3 1 3 1 1 3 1 1 3 3 1 3 3 1 1 3 2 3 1 3 3 1 2 1 2 1 3 1 2 2 1 3 3 3 2 1 1
 [815] 1 3 3 2 1 3 3 2 1 3 1 1 1 2 1 3 3 2 3 2 2 1 1 1 1 1 2 3 1 3 3 3 3 3 3 1 1
 [852] 1 3 3 1 3 1 3 3 1 3 1 1 3 3 2 3 3 1 3 3 3 3 2 1 1 1 3 2 1 3 3 1 3 1 2 2 1
 [889] 2 3 1 3 1 1 3 1 3 3 3 3 1 3 3 3 2 3 2 3 3 2 3 2 2 3 1 2 3 3 3 1 3 1 1 3 2
 [926] 2 1 3 1 1 1 1 2 1 2 1 3 2 3 1 3 1 2 3 2 3 3 1 3 3 1 1 2 3 3 3 3 3 2 2 3 1
 [963] 2 2 2 1 3 3 1 1 2 3 3 3 1 1 1 1 3 2 1 2 3 3 1 3 3 3 1 3 3 3 1 2 3 3 3 1 3
[1000] 1

$time
elapsed 
  0.109 

> 
> 
> 
> cleanEx()
> nameEx("LOGITUCB")
> ### * LOGITUCB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: LOGITUCB
> ### Title: LogitUCB algorithm
> ### Aliases: LOGITUCB
> 
> ### ** Examples
> 
> size.tot = 1000
> set.seed(4649)                          # this makes the example exactly reproducible
> x1 = runif(size.tot, min=0, max=10)          # you have 4, largely uncorrelated predictors
> x2 = runif(size.tot, min=0, max=10)
> x3 = runif(size.tot, min=0, max=10)
> x4 = runif(size.tot, min=0, max=10)
> dt = cbind(x1,x2,x3,x4)
> #arm reward
> arm_1 <-  as.vector(c(-1,9,-8,4))
> K1 = 1/(1+exp(- crossprod(t(dt),arm_1))) # inverse logit transform of linear predictor
> K1 = vapply(K1, function(x) rbinom(1, 1, x), as.integer(1L))
> arm_2 <-  as.vector(c(-1,2,1,0))
> K2 = 1/(1+exp(- crossprod(t(dt),arm_2))) # inverse logit transform of linear predictor
> K2 = vapply(K2, function(x) rbinom(1, 1, x), as.integer(1L))
> arm_3 <-  as.vector(c(-1,-5,1,10))
> K3 = 1/(1+exp(- crossprod(t(dt),arm_3)))
> K3 = vapply(K3, function(x) rbinom(1, 1, x), as.integer(1L))
> visitorReward <-  data.frame(K1,K2,K3)
> dt <- as.data.frame(dt)
> LOGITUCB(dt,visitorReward)
0.126 sec elapsed
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
$proba
   [1] 10.9068992 10.3122380 10.4472540 15.7500968 11.6874827  9.6482962
   [7]  5.4787943  8.3047022  8.2303831  7.8033487  3.3441302  8.3176219
  [13]  2.6599480  1.6316442  1.7047102  2.5952629  1.4135480  1.0575051
  [19]  1.9170819  1.8500738  1.6517784  1.5793306  1.2715166  1.2991860
  [25]  1.6976804  1.5211438  1.5470648  1.3421428  1.6725246  1.9099530
  [31]  1.2617181  1.3661591  1.1782260  1.2051129  1.1994912  1.5035586
  [37]  1.0815587  1.3788223  1.6939366  1.1595703  1.2247612  1.4448370
  [43]  1.3279376  1.1634795  1.1075802  1.0048462  1.1695340  1.3146195
  [49]  1.4083000  1.3577033  1.1872874  1.1500210  1.2101678  1.2309711
  [55]  1.1832019  1.2317779  1.3178052  1.1905878  1.1484461  0.9337668
  [61]  1.0314505  0.8854867  1.2305984  1.0571431  1.0508676  1.1855384
  [67]  0.9835777  0.9787716  1.1780997  1.0134920  0.9281808  1.0430698
  [73]  0.7933786  1.2287575  0.8352909  1.1558688  0.8683784  1.1106343
  [79]  1.0671429  0.9942605  1.1468226  1.1839898  0.8331222  1.0739870
  [85]  1.0346800  1.0523960  0.9607198  1.1305690  0.9410298  0.9956006
  [91]  1.1630529  1.0938590  1.0122605  1.0750868  1.0345370  0.8714752
  [97]  1.0223913  1.1161413  1.2293746  1.0523305  1.1426663  1.0893971
 [103]  1.2232813  1.0614243  1.0071745  1.0981668  1.0575962  1.0335343
 [109]  1.0877589  0.9251015  0.9955789  1.1625827  1.0166941  1.1017024
 [115]  1.2103530  0.8479357  1.0610003  0.8139180  1.0491136  0.9514968
 [121]  1.0084589  1.0729148  1.0904445  1.0027756  1.0722137  0.8694065
 [127]  0.8144690  1.0092971  0.9593599  0.8510362  1.0688259  1.0226260
 [133]  1.1329458  1.0491959  0.8684988  1.1059278  0.7570486  0.7144680
 [139]  0.8271181  1.1376611  1.1243034  0.9992595  1.0638012  0.9509198
 [145]  1.0331800  0.9590525  0.8764655  1.1261780  0.7504745  1.0944409
 [151]  0.9412098  0.7777655  0.8077986  1.1393419  1.1276561  1.0282058
 [157]  0.6903841  1.0822866  0.9800225  1.0665763  1.0044399  0.9506719
 [163]  0.8697342  0.9464758  1.0618919  0.8933504  0.9161394  0.9831214
 [169]  0.7500558  0.9237902  1.0161064  1.1614184  0.9260786  0.9481115
 [175]  1.0731134  1.0205126  0.9812544  1.0891508  1.0586359  1.0085946
 [181]  0.8978180  1.0856526  0.9781463  0.8765605  0.8126493  0.9760935
 [187]  1.0492466  0.8164244  0.8999026  0.8425499  0.9656328  1.0589294
 [193]  0.7676294  1.0391903  0.9343387  0.9519705  0.9579933  0.9427506
 [199]  0.9098183  1.0884914  1.0337146  0.8367603  0.9160351  0.9252511
 [205]  1.0230262  0.8411631  0.9286234  0.8810916  0.8372106  0.7853610
 [211]  0.8836402  1.0401826  0.8473598  1.0817104  1.0057628  0.9556045
 [217]  1.0617297  0.8559799  0.8578216  0.9829049  0.9499127  0.9030946
 [223]  0.8354790  0.9805747  0.8403875  1.0208171  0.8737711  0.9509365
 [229]  0.9491599  0.9876629  1.0041741  0.9975014  0.8383170  0.9255071
 [235]  1.0075578  0.9716742  0.7769209  0.9656756  0.9639382  0.9479434
 [241]  1.0340100  0.8544104  0.8595800  0.9329385  0.9171417  0.9216874
 [247]  0.9065625  0.9712977  0.9832820  1.0713847  1.0653208  1.0470714
 [253]  0.7896166  0.8758115  0.7851122  0.9664674  0.9784078  0.9245186
 [259]  1.0342338  0.9897929  0.8540333  0.8746405  0.9498274  0.8827795
 [265]  1.0014041  0.7904574  0.8787417  1.0350738  0.9672812  0.9290158
 [271]  1.0419831  0.7969806  0.8441630  0.7156446  0.9588585  0.8914527
 [277]  0.9697834  0.9534347  0.9584528  1.0014035  1.0506725  0.9046284
 [283]  0.9322505  0.9531688  0.9039906  0.8397587  0.8130311  0.8162745
 [289]  0.9071111  0.7930458  0.9660725  1.0098528  0.8542449  0.9713452
 [295]  1.0169968  0.7221184  0.8394829  0.9909346  0.9593233  0.8898166
 [301]  0.9619004  0.8546915  0.9296543  0.8982999  0.8455977  0.7547533
 [307]  0.9933234  0.9642885  0.9119203  0.8603985  0.9158762  0.8656444
 [313]  0.9187123  0.9866397  0.7587251  0.8335922  0.8259259  0.8546161
 [319]  0.9358050  0.8766330  0.8604728  0.8811493  0.7989490  0.6258786
 [325]  0.9031115  0.9603906  0.9436329  0.9781386  0.7494840  0.7422747
 [331]  0.9793740  0.9509968  0.9382855  1.0236618  0.8826813  0.9243613
 [337]  0.8345553  0.9207401  0.8546978  0.9765794  0.8915391  0.8855866
 [343]  0.9028938  0.9870023  1.0277300  1.0000679  0.9351033  0.9028117
 [349]  0.8185450  0.9795600  0.8974853  0.9428345  0.9983707  1.0478277
 [355]  0.9359565  0.8339331  0.9478804  0.9630507  0.7745804  0.8789473
 [361]  0.9007644  0.8939859  1.0012843  0.8156771  0.9430985  0.8352635
 [367]  0.9312996  0.8616635  0.9601443  0.9677392  0.9780893  0.9958741
 [373]  0.9476197  0.9529138  0.9442155  0.9198916  0.9168674  0.9783060
 [379]  0.7476881  0.8015101  0.9583671  0.8337402  0.8905640  0.9111179
 [385]  0.9377133  0.9127926  1.0380307  0.8749705  1.0010958  0.7744964
 [391]  0.8722069  0.9593702  0.9314865  0.8341986  0.6074752  0.9110049
 [397]  0.9232529  0.7867593  0.9870512  0.9328592  0.9481634  0.8467338
 [403]  0.8822810  0.8547495  0.8002979  0.8999056  0.8791361  0.7181242
 [409]  0.9673676  0.8856474  0.9859891  0.9249020  0.8694687  0.8859330
 [415]  0.9469371  0.9386884  0.8805508  0.7538837  0.9718521  0.8098980
 [421]  0.8131757  0.9394467  0.9502404  0.8664426  0.7506359  0.9297362
 [427]  0.9290341  0.9199857  0.9142809  0.8882664  0.9026766  0.9193501
 [433]  0.9349278  0.9587488  0.9066631  0.9410927  0.8862396  0.7914473
 [439]  0.9072677  0.8230871  0.9033267  0.9470479  0.7993239  0.7293688
 [445]  0.7530803  0.9604849  0.9252610  0.9502472  0.8584260  0.9134832
 [451]  0.7031771  0.7581779  0.9362328  0.6621498  0.8131343  0.8302426
 [457]  0.9296807  0.8407865  0.8897700  0.9079205  0.9011180  0.9505007
 [463]  0.8727641  0.8531557  0.8041523  0.9548233  0.9800918  0.8450349
 [469]  0.7585034  0.7563625  0.8757604  0.8257529  0.6071883  0.7701652
 [475]  0.8674441  0.8352988  0.9625406  0.8997816  0.9309810  0.9252336
 [481]  0.8590759  0.8710065  0.8195070  0.7961215  0.8398921  0.8773870
 [487]  0.8764188  0.8749037  0.9208438  0.8209777  0.7708570  0.8797940
 [493]  0.8728005  0.9273313  0.8932182  0.9106560  0.9046940  0.8430360
 [499]  0.8782946  0.8651879  0.9315735  0.8391134  0.9422431  0.9060254
 [505]  0.7956778  0.9828165  0.8966741  0.8755144  0.7468908  0.8730359
 [511]  0.7662125  0.8619545  0.7923577  1.0053277  0.8022844  0.8020546
 [517]  0.9019861  0.9148904  0.8761522  0.9272544  0.8863638  0.8089212
 [523]  0.8900772  0.8679102  0.8506494  0.8929433  0.9024156  0.8453000
 [529]  0.7720660  0.8901073  0.8107366  0.7791994  0.8130462  0.8032889
 [535]  0.8722855  0.8308614  0.8559476  0.8948857  0.9300045  0.7698984
 [541]  0.8930676  0.8757062  0.7526405  0.9116147  0.7805919  0.8968418
 [547]  0.8625608  0.9199927  0.8173368  0.7368243  0.7399596  0.9299374
 [553]  0.9982127  0.8106131  0.9142869  0.8264937  0.8523894  0.8249728
 [559]  0.9692556  0.8626082  0.8113170  0.7797670  0.8870219  0.8422502
 [565]  0.7797032  0.7887594  0.8601936  0.8884454  0.9076254  0.8991427
 [571]  0.8727483  0.9353466  0.8642374  0.8050372  0.7075746  0.7764483
 [577]  0.7964790  0.9259798  0.9092079  0.8821203  0.9640934  0.9111188
 [583]  0.8769444  0.8412528  0.9169842  0.9180797  0.7827951  0.9836546
 [589]  0.8239251  0.8875767  0.9102931  0.8427460  0.7596867  0.8444362
 [595]  0.8502917  0.8404662  0.8281487  0.8700147  0.9420485  0.8021045
 [601]  0.8063342  0.6663953  0.6699537  0.9111757  0.8559368  0.8973342
 [607]  0.8711379  0.7331731  0.8598567  0.7689842  0.8299794  0.9219239
 [613]  0.8603434  0.8200924  0.7582984  0.9005152  0.8809533  0.8542312
 [619]  0.9019740  0.9384740  0.8903524  0.7741888  0.7458525  0.7232000
 [625]  0.8926987  0.9645554  0.8188003  0.7892473  0.9038137  0.9533966
 [631]  0.9242032  0.8885992  0.7145282  0.8485431  0.6992755  0.6107718
 [637]  0.8717424  0.9207510  0.8563234  0.8321267  0.9499997  0.8036505
 [643]  0.8695862  0.6823222  0.8979947  0.8992372  0.8840743  0.8778578
 [649]  0.9099952  0.9481347  0.6990879  0.9049812  0.8598547  0.8914816
 [655]  0.7662348  0.8805172  0.6945543  0.8382052  0.8405793  0.8833742
 [661]  0.8892745  0.7120441  0.9531389  0.8077458  0.8493939  0.9065665
 [667]  0.8982272  0.8526830  0.7623073  0.8263615  0.8834877  0.8244880
 [673]  0.8774420  0.7960554  0.8854149  0.9409872  0.8773668  0.8918849
 [679]  0.8986001  0.8949248  0.8490393  0.9240799  0.8348923  0.8654539
 [685]  0.8683906  0.8569450  0.8742576  0.8126549  0.9508149  0.9243416
 [691]  0.7204096  0.7356665  0.8961183  0.8468245  0.8506848  0.7389380
 [697]  0.8598004  0.8917978  0.9218828  0.8585989  0.8698023  0.8155507
 [703]  0.9249887  0.8430901  0.8969223  0.8465275  0.8346865  0.8342476
 [709]  0.8797936  0.8697603  0.8096195  0.8394969  0.8537515  0.9096181
 [715]  0.9443138  0.8868569  0.7920026  0.8043805  0.9890192  0.8239372
 [721]  0.9120208  0.6743705  0.7797820  0.8451559  0.8816079  0.8125861
 [727]  0.8631632  0.7995464  0.8071165  0.8383324  0.7891735  0.8103944
 [733]  0.7749873  0.7982606  0.7317665  0.8945999  0.9194906  0.8940278
 [739]  0.9368539  0.8978570  0.9280111  0.8366090  0.7455023  0.8577373
 [745]  0.8778842  0.8444466  0.8680901  0.7510164  0.8464111  0.9008235
 [751]  0.7968800  0.8714439  0.6648663  0.8771275  0.8549744  0.8010916
 [757]  0.8937716  0.9350322  0.8392533  0.7636040  0.8671968  0.6700187
 [763]  0.8621874  0.8940542  0.7886952  0.8616630  0.6522771  0.8014387
 [769]  0.7999046  0.8798136  0.8335775  0.8881506  0.6716590  0.9335438
 [775]  0.9218495  0.8017601  0.8811391  0.8784638  0.8805543  0.6997330
 [781]  0.8107064  0.8836340  0.8803125  0.8276296  0.9743925  0.7576084
 [787]  0.7750678  0.8473154  0.8101524  0.9212656  0.8447605  0.6445919
 [793]  0.7651337  0.9018515  0.8970971  0.8996208  0.8102282  0.8181044
 [799]  0.9157659  0.9073393  0.9094928  0.8598903  0.8361759  0.7927769
 [805]  0.8924102  0.7266473  0.8519592  0.8605211  0.9127489  0.8066876
 [811]  0.8443800  0.8437970  0.7511213  0.8564884  0.8426868  0.6643385
 [817]  0.8358308  0.8555614  0.8055759  0.8289031  0.8381505  0.7234361
 [823]  0.7970511  0.9334278  0.9151820  0.8001684  0.8678212  0.8789964
 [829]  0.9048655  0.8563188  0.8488147  0.7703220  0.8616526  0.8277360
 [835]  0.8084521  0.9139082  0.7913262  0.8918820  0.8089293  0.9199384
 [841]  0.8650114  0.8114821  0.8706466  0.8628702  0.9463957  0.8117206
 [847]  0.9014348  0.7940035  0.8848097  0.8911927  0.9504584  0.9351003
 [853]  0.8782523  0.8640936  0.7412952  0.8480690  0.7548100  0.8368442
 [859]  0.8688852  0.7787142  0.8066796  0.7937434  0.8200496  0.8066600
 [865]  0.8579705  0.8318655  0.8663523  0.8559973  0.8692259  0.8140214
 [871]  0.8602247  0.8196478  0.8577593  0.8767792  0.7995809  0.9055556
 [877]  0.7617972  0.8221324  0.9161521  0.9216225  0.8882273  0.7773607
 [883]  0.8428328  0.8684218  0.7768196  0.6521741  0.7519296  0.8818163
 [889]  0.7683936  0.8513695  0.8808750  0.7987923  0.8923939  0.8291949
 [895]  0.8329910  0.6998439  0.7630069  0.6899756  0.7186803  0.8167783
 [901]  0.9125368  0.9025421  0.8884790  0.8006453  0.8616710  0.8721680
 [907]  0.7798069  0.7896196  0.8909873  0.8363818  0.8380015  0.7710057
 [913]  0.8329637  0.8457196  0.8397098  0.8325181  0.6778237  0.8756300
 [919]  0.8910779  0.8577459  0.7496287  0.7879943  0.6902887  0.8341747
 [925]  0.8456050  0.9098703  0.9013944  0.8705238  0.7955714  0.8510878
 [931]  0.8301518  0.9041385  0.8755897  0.8717156  0.7254622  0.8558573
 [937]  0.6648689  0.8352522  0.9149521  0.8760126  0.7735170  0.8677824
 [943]  0.8160298  0.8091591  0.8273437  0.8639543  0.9137578  0.8985004
 [949]  0.7933363  0.6637860  0.7172288  0.8873142  0.8757694  0.7771785
 [955]  0.9341839  0.7663291  0.8302520  0.7898051  0.8941747  0.8257505
 [961]  0.7746308  0.7852882  0.8451637  0.8884331  0.7903641  0.7662219
 [967]  0.7027942  0.9301769  0.8528129  0.8731489  0.8810456  0.8030594
 [973]  0.9126648  0.6659955  0.8817181  0.8957115  0.7764084  0.7468962
 [979]  0.8769392  0.8379674  0.8073896  0.9186556  0.8635266  0.8250859
 [985]  0.9003782  0.7278992  0.8533987  0.8631025  0.9067739  0.6777193
 [991]  0.8732650  0.7645518  0.7625948  0.8259546  0.8786395  0.8743224
 [997]  0.6563150  0.8585674  0.8446664  0.7287544

$theta_hat
           x1           x2          x3         x4
K1 0.04285903  0.096787908 -0.03256048 0.02670663
K2 0.02427399  0.047720537  0.07644499 0.01386249
K3 0.03762997 -0.005228083  0.03462972 0.08865497

$theta
           x1        x2        x3          x4
K1 -0.8231089  8.183254 -7.345278  3.37514998
K2 -0.9816207  2.414717  0.982829  0.04598611
K3 -1.0823918 -5.291706  1.119802 10.94880603

$choice
   [1] 1 2 3 3 1 2 3 2 1 2 1 3 3 1 2 2 3 1 1 1 1 3 1 3 2 1 2 3 3 2 1 1 1 3 1 1 3
  [38] 2 3 2 2 1 1 2 1 3 2 3 1 3 3 2 2 2 1 1 2 3 1 1 2 1 3 2 3 2 2 2 1 1 1 2 1 3
  [75] 2 2 1 3 1 1 1 1 2 2 3 3 1 1 1 3 1 2 3 2 3 2 2 2 3 2 2 2 3 1 1 3 3 2 1 1 1
 [112] 2 3 2 2 2 3 2 1 1 2 1 3 2 1 1 2 3 1 3 1 1 3 2 2 1 1 2 2 3 2 2 1 3 1 2 3 3
 [149] 2 3 1 2 1 1 2 1 3 1 2 1 3 2 1 2 3 2 2 2 3 1 2 3 2 2 3 1 3 3 1 2 2 2 2 1 2
 [186] 2 2 2 2 2 1 2 3 3 3 2 1 3 3 2 1 1 3 2 3 2 3 1 2 2 1 3 3 1 2 2 3 2 2 3 2 1
 [223] 2 2 1 1 1 2 1 1 3 3 1 2 1 2 2 3 1 2 3 2 2 2 2 2 2 3 2 1 1 1 1 2 3 1 3 1 1
 [260] 1 2 3 3 2 3 3 2 1 2 2 3 3 3 3 2 2 2 3 3 3 1 2 2 2 3 2 1 2 2 2 3 2 3 2 1 3
 [297] 3 1 2 3 1 1 1 3 2 1 2 3 2 2 1 3 2 1 3 3 3 1 3 1 2 3 2 1 2 2 3 2 2 3 1 1 3
 [334] 3 2 1 3 1 3 1 2 3 1 1 2 1 3 3 2 2 3 1 3 3 2 1 2 2 2 3 2 3 1 3 2 3 3 2 2 3
 [371] 2 3 2 3 1 3 2 3 1 1 1 2 2 1 2 2 3 3 1 2 1 3 1 1 1 1 2 3 1 3 1 1 1 3 2 3 3
 [408] 3 2 2 2 1 1 2 2 2 3 2 1 2 2 3 2 2 2 2 2 3 2 3 1 3 3 2 1 2 1 2 3 3 3 3 1 2
 [445] 2 3 3 3 3 2 3 1 2 1 1 3 2 1 2 3 1 3 2 2 1 1 3 3 1 2 3 2 2 3 2 3 1 2 3 1 2
 [482] 1 2 2 2 3 2 1 2 3 1 1 2 1 3 2 3 1 1 2 3 2 3 1 2 1 3 1 2 2 1 2 3 3 3 3 2 2
 [519] 2 1 2 3 3 2 1 1 1 3 2 2 3 2 2 3 1 2 2 3 1 2 2 3 3 2 3 3 2 3 1 2 3 2 2 3 2
 [556] 2 2 3 3 3 2 2 1 1 2 1 2 1 2 2 1 2 1 3 3 2 1 2 2 1 1 2 1 1 1 1 3 1 1 3 3 1
 [593] 3 2 3 1 3 1 3 3 3 1 2 3 3 3 1 3 3 1 2 3 3 3 2 1 1 3 2 3 3 1 3 3 2 1 2 1 2
 [630] 1 3 2 3 1 3 3 1 3 2 2 3 1 1 2 3 2 2 3 3 2 3 2 3 3 2 1 2 2 3 3 2 2 2 1 3 3
 [667] 3 2 3 1 2 2 2 3 2 3 2 2 3 3 3 1 2 1 3 2 3 1 1 3 1 1 2 2 3 2 1 3 1 2 2 2 3
 [704] 2 2 3 3 2 3 1 1 1 2 2 3 1 1 2 1 3 3 1 3 1 3 3 2 2 3 3 2 3 3 2 3 1 3 1 1 1
 [741] 1 2 2 2 2 3 3 2 2 3 2 3 3 2 2 3 1 1 3 1 3 2 3 3 2 1 3 3 2 2 3 2 2 3 2 3 1
 [778] 3 3 2 1 2 2 1 1 3 3 1 3 3 2 3 2 1 3 1 2 2 1 1 3 2 1 2 2 2 2 1 3 3 2 2 1 2
 [815] 1 3 3 2 1 3 2 2 1 2 1 1 1 2 1 3 3 2 3 2 2 2 2 2 1 2 2 3 3 3 2 3 3 3 3 1 1
 [852] 1 3 3 1 3 1 3 1 2 2 1 1 2 2 2 3 2 2 3 3 3 3 2 1 3 1 3 2 1 3 3 3 2 1 1 2 2
 [889] 2 3 3 3 1 2 2 2 2 3 3 3 1 2 2 3 2 3 2 3 1 2 2 2 2 2 1 2 3 3 3 1 3 1 1 3 2
 [926] 2 1 3 1 2 3 1 1 3 2 1 3 2 3 2 3 3 2 3 2 2 3 3 1 3 1 3 2 3 2 2 3 3 2 2 2 1
 [963] 2 2 2 2 3 3 1 1 2 3 3 2 2 1 1 2 3 2 2 1 3 2 1 3 3 3 1 2 2 3 1 2 2 3 2 1 2
[1000] 2

$time
elapsed 
  0.126 

> 
> 
> 
> cleanEx()
> nameEx("UCB")
> ### * UCB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: UCB
> ### Title: UCB algorithm
> ### Aliases: UCB
> 
> ### ** Examples
> 
> ## Generates 10000 numbers from 2 binomial  distributions
> set.seed(4434)
> K1 <- rbinom(1000, 1, 0.6)
> K2 <- rbinom(1000, 1, 0.7)
> ## Define a dataframe of rewards
> visitorReward <- as.data.frame(cbind(K1,K2) )
> #Run UCB algorithm
> ucb_alloc  <- UCB(visitorReward,alpha = 10)
0.044 sec elapsed
th_hat
0.5925110132158590.747252747252747
th real
0.5930.724
> ucb_alloc$S
                 bandit 1    bandit 2
average reward   0.592511   0.7472527
trials         454.000000 546.0000000
> barplot(table(ucb_alloc$choice),main = "Histogram of choices",xlab="arm")
> #Upper bound for arm 2 according iterations (red line is the real mean)
> plot(x=c(1:length(ucb_alloc$choice[ucb_alloc$choice==2])),
+   ucb_alloc$proba[ucb_alloc$choice==2],
+   type='l',xlab = 'Time',ylab = 'Upper bound of arm 2')
>   lines(c(1:length(ucb_alloc$choice[ucb_alloc$choice==2])),rep(mean(K2),length(ucb_alloc$choice[ucb_alloc$choice==2])),col="red")
> ucb_alloc$time
elapsed 
  0.044 
> ucb_alloc$theta_hat
 bandit 1  bandit 2 
0.5925110 0.7472527 
> ucb_alloc$theta
   K1    K2 
0.593 0.724 
> 
> 
> 
> cleanEx()
> nameEx("abtest1")
> ### * abtest1
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: abtest1
> ### Title: abtest1
> ### Aliases: abtest1
> ### Keywords: datasets
> 
> ### ** Examples
> 
>  try(data(package = "bandit4abtest") )
Data sets in package ‘bandit4abtest’:

abtest1                 abtest1
abtest2                 abtest2

>  load(abtest1)
Error in load(abtest1) : bad 'file' argument
Execution halted
